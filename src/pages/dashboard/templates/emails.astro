---
import { getFirestore } from "firebase-admin/firestore";
import { app } from "@/firebase/server";

import Layout from "@/layouts/dashboard.astro";
import TemplatePreview from "@/components/TemplatePreview.astro";

import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";

const db = getFirestore(app);
const settingsDoc = db.collection("settings").doc("email-template");
const current = (await settingsDoc.get()).data()?.value;

const param = new URL(Astro.request.url).searchParams.get("template")!;
const selected = param || current || "microsoft";
---

<Layout title="Preview">
  <div class="max-w-5xl py-10">
    <Card
      className="flex justify-center items-center contain-content bg-accent p-0"
    >
      <div class="relative select-none text-sm text-muted-foreground mt-6">
        Width: <span id="template-width" class="select-text">auto</span>
      </div>

      <Separator />

      <CardContent
        className="p-0 resize-x overflow-hidden w-full max-w-full min-w-[20rem]"
      >
        <TemplatePreview selectedTemplate={selected} />
      </CardContent>
    </Card>
  </div>

  <div class="grid gap-6">
    <Card>
      <CardHeader>
        <CardTitle>Template ({current})</CardTitle>
        <CardDescription>
          The selected template will be used to display in the main path.
        </CardDescription>
      </CardHeader>
      <CardContent className="flex flex-col gap-4">
        <form method="GET" class="flex">
          <select title={`Current: ${current}`} id="template-select" name="template" class="border p-2 rounded mr-auto min-w-72">
            <option value="microsoft" selected={selected === "microsoft"}>
              Microsoft
            </option>
            <option value="onedrive" selected={selected === "onedrive"}>
              OneDrive Excel
            </option>
          </select>

          <div class="flex gap-2">
            <Button type="submit"> Show </Button>
            <Button type="button" id="save-template-btn"> Save </Button>
          </div>
        </form>
      </CardContent>
    </Card>
  </div>
</Layout>

<script>
  const preview = document.querySelector('[class*="resize-x"]')! as any;
  const widthLabel = document.getElementById("template-width")!;

  const updateWidth = () => {
    widthLabel.textContent = `${preview.offsetWidth}px`;
  };

  new ResizeObserver(updateWidth).observe(preview);
  updateWidth();

  const saveTemplateBtn = document.querySelector(
    "#save-template-btn"
  ) as HTMLButtonElement;

  saveTemplateBtn.addEventListener("click", async (e) => {
    const selected = (document.getElementById("template-select") as HTMLSelectElement)?.value;

    try {
      const response = await fetch("/api/settings/email-template", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ selected }),
      });

      if (response.ok) {
        alert("Configuración guardada correctamente");
        location.reload();
      } else {
        alert("Error al guardar la configuración");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Error en el servidor");
    }
  });
</script>
